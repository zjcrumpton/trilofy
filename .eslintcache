[{"/Users/zac/Dev/portfolio/spotify-client/src/components/Searchbar.jsx":"1","/Users/zac/Dev/portfolio/spotify-client/src/components/StreamingSetter.jsx":"2","/Users/zac/Dev/portfolio/spotify-client/src/App.js":"3","/Users/zac/Dev/portfolio/spotify-client/src/index.js":"4","/Users/zac/Dev/portfolio/spotify-client/src/components/Dashboard.jsx":"5","/Users/zac/Dev/portfolio/spotify-client/src/components/Settings.jsx":"6","/Users/zac/Dev/portfolio/spotify-client/src/contexts/streamingContext.js":"7","/Users/zac/Dev/portfolio/spotify-client/src/components/Authentication.jsx":"8","/Users/zac/Dev/portfolio/spotify-client/src/components/SideNav.jsx":"9","/Users/zac/Dev/portfolio/spotify-client/src/reportWebVitals.js":"10","/Users/zac/Dev/portfolio/spotify-client/src/components/streamingPlatformLogins/spotifyLogin.jsx":"11","/Users/zac/Dev/portfolio/spotify-client/src/utilities/cookies.js":"12","/Users/zac/Dev/portfolio/spotify-client/src/components/Home.jsx":"13","/Users/zac/Dev/portfolio/spotify-client/src/api/NewReleases.jsx":"14","/Users/zac/Dev/portfolio/spotify-client/src/api/RecentlyPlayed.jsx":"15","/Users/zac/Dev/portfolio/spotify-client/src/api/TopArtists.jsx":"16","/Users/zac/Dev/portfolio/spotify-client/src/api/FeaturedPlaylists.jsx":"17","/Users/zac/Dev/portfolio/spotify-client/src/hooks/useFetchByPlatform.js":"18","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/SmallAlbum.jsx":"19","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/TailSpinLoader.jsx":"20","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/MedAlbum.jsx":"21","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/ArtistPic.jsx":"22","/Users/zac/Dev/portfolio/spotify-client/src/api/AlbumPage.jsx":"23","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/Tracklist.jsx":"24","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/TracklistItems.jsx":"25"},{"size":584,"mtime":1610662203693,"results":"26","hashOfConfig":"27"},{"size":1318,"mtime":1611003458710,"results":"28","hashOfConfig":"27"},{"size":1401,"mtime":1610664013451,"results":"29","hashOfConfig":"27"},{"size":500,"mtime":1610578412797,"results":"30","hashOfConfig":"27"},{"size":723,"mtime":1610668834242,"results":"31","hashOfConfig":"27"},{"size":549,"mtime":1610572664270,"results":"32","hashOfConfig":"27"},{"size":266,"mtime":1610422200151,"results":"33","hashOfConfig":"27"},{"size":873,"mtime":1610578598282,"results":"34","hashOfConfig":"27"},{"size":3228,"mtime":1610146841229,"results":"35","hashOfConfig":"27"},{"size":364,"mtime":1610057484804,"results":"36","hashOfConfig":"27"},{"size":2107,"mtime":1610580662028,"results":"37","hashOfConfig":"27"},{"size":322,"mtime":1610473568709,"results":"38","hashOfConfig":"27"},{"size":2012,"mtime":1610662646967,"results":"39","hashOfConfig":"27"},{"size":1215,"mtime":1610666213126,"results":"40","hashOfConfig":"27"},{"size":1447,"mtime":1610669884139,"results":"41","hashOfConfig":"27"},{"size":1075,"mtime":1610662061355,"results":"42","hashOfConfig":"27"},{"size":1323,"mtime":1610661930754,"results":"43","hashOfConfig":"27"},{"size":1658,"mtime":1610667121722,"results":"44","hashOfConfig":"27"},{"size":588,"mtime":1610946274151,"results":"45","hashOfConfig":"27"},{"size":287,"mtime":1610646160128,"results":"46","hashOfConfig":"27"},{"size":510,"mtime":1610653785771,"results":"47","hashOfConfig":"27"},{"size":385,"mtime":1610660913745,"results":"48","hashOfConfig":"27"},{"size":2765,"mtime":1611005894273,"results":"49","hashOfConfig":"27"},{"size":481,"mtime":1611027203467,"results":"50","hashOfConfig":"27"},{"size":673,"mtime":1611027699347,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"rgqea2",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zac/Dev/portfolio/spotify-client/src/components/Searchbar.jsx",["113","114","115"],"import React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { FaSpotify, FaSoundcloud, FaYoutube } from \"react-icons/fa\";\nimport StreamingSetter from \"./StreamingSetter\";\n\nconst Searchbar = () => {\n  return (\n    <form>\n      <div className=\"search-nav sticky\">\n        <FaSearch size={25} color=\"#adbdcc\" className=\"search-icon\" />\n        <input type=\"text\" placeholder=\"Search\" className=\"search-bar\" />\n        <input type=\"reset\" value=\"X\" className=\"reset-search\"></input>\n        <StreamingSetter />\n      </div>\n    </form>\n  );\n};\n\nexport default Searchbar;\n",["116","117"],"/Users/zac/Dev/portfolio/spotify-client/src/components/StreamingSetter.jsx",[],["118","119"],"/Users/zac/Dev/portfolio/spotify-client/src/App.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/index.js",[],["120","121"],"/Users/zac/Dev/portfolio/spotify-client/src/components/Dashboard.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Settings.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/contexts/streamingContext.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Authentication.jsx",[],["122","123"],"/Users/zac/Dev/portfolio/spotify-client/src/components/SideNav.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/reportWebVitals.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/streamingPlatformLogins/spotifyLogin.jsx",["124","125"],"import React from \"react\";\nimport { FaSpotify } from \"react-icons/fa\";\nimport queryString from \"query-string\";\nimport getCookie from \"../../utilities/cookies\";\nimport StreamingContext, {\n  StreamingConsumer,\n} from \"../../contexts/streamingContext\";\n\nconst SpotifyLogin = ({ redirectUri }) => {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(loggedIn());\n  const streamingContext = React.useContext(StreamingContext);\n\n  let params = queryString.parse(window.location.hash);\n\n  React.useEffect(() => {\n    if (streamingContext.spotifyLoggedIn !== isLoggedIn) {\n      streamingContext.updateSpotifyLogin(isLoggedIn);\n    }\n  }, [streamingContext.spotifyLoggedIn, isLoggedIn]);\n\n  if (params[\"access_token\"]) {\n    const { access_token, expires_in } = params;\n    document.cookie = `spotifyAccess=${access_token}; max-age=${expires_in}; path=/; SameSite=Lax;`;\n  }\n\n  return (\n    <div className=\"centered-flex-container platform-settings\">\n      <div className=\"platform-card\">\n        <FaSpotify size={100} color={isLoggedIn ? \"#17d85d\" : \"#adbdcc\"} />\n        <button\n          className=\"connect-button clickable\"\n          onClick={() => {\n            if (streamingContext.spotifyLoggedIn) {\n              logoutOfSpotify();\n              setIsLoggedIn(false);\n            } else {\n              loginToSpotify(redirectUri);\n              setIsLoggedIn(true);\n            }\n          }}\n        >\n          {isLoggedIn ? \"Disconnect Spotify\" : \"Connect Spotify\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst loginToSpotify = (redirectUri) => {\n  const scopes = \"user-read-recently-played user-top-read\";\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=eafc1d75f4cf413e891b0392579ee5da&redirect_uri=${redirectUri}&response_type=token&scope=${encodeURIComponent(\n    scopes\n  )}`;\n};\n\nconst logoutOfSpotify = () => {\n  document.cookie = \"spotifyAccess=expired; max-age=0; path=/; SameSite=Lax\";\n};\n\nconst loggedIn = () => {\n  return getCookie(\"spotifyAccess\") && getCookie(\"spotifyAccess\") !== \"expired\"\n    ? true\n    : false;\n};\n\nexport default SpotifyLogin;\n",["126","127"],"/Users/zac/Dev/portfolio/spotify-client/src/utilities/cookies.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Home.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/api/NewReleases.jsx",["128"],"import React, { useContext } from \"react\";\nimport StreamingContext from \"../contexts/streamingContext\";\nimport getCookie from \"../utilities/cookies\";\nimport TailSpinLoader from \"../components/ui/TailSpinLoader\";\nimport MedAlbum from \"../components/ui/MedAlbum\";\nimport useFetchByPlatform from \"../hooks/useFetchByPlatform\";\n\nconst endpoints = {\n  spotify: \"https://api.spotify.com/v1/browse/new-releases\",\n  soundcloud: \"\",\n  youtube: \"\",\n};\n\nconst NewReleases = () => {\n  const { platform } = useContext(StreamingContext);\n  const { loading, data } = useFetchByPlatform(endpoints[`${platform}`]);\n\n  if (loading) {\n    return <TailSpinLoader />;\n  }\n\n  // console.log(data);\n\n  return (\n    <div>\n      <h1 className=\"release-header\">New Releases</h1>\n      <div className=\"featured-list\">\n        {data[\"albums\"][\"items\"].map((item, index) => {\n          const album = formatSpotifyAlbum(item);\n          return <MedAlbum key={index} album={album} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst formatSpotifyAlbum = (album) => {\n  return {\n    name: album[\"name\"],\n    type: album[\"album_type\"],\n    desc: album[\"artists\"][0].name,\n    src: album[\"images\"][0][\"url\"],\n  };\n};\n\nexport default NewReleases;\n","/Users/zac/Dev/portfolio/spotify-client/src/api/RecentlyPlayed.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/api/TopArtists.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/api/FeaturedPlaylists.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/hooks/useFetchByPlatform.js",["129"],"import { useEffect, useState, useContext } from \"react\";\nimport getCookie from \"../utilities/cookies\";\nimport StreamingContext from \"../contexts/streamingContext\";\n\nconst useFetchByPlatform = (url) => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { platform, updateSpotifyLogin, logoutSpotify } = useContext(\n    StreamingContext\n  );\n\n  const fetchFromSpotify = (url) =>\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${getCookie(\"spotifyAccess\")}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.status >= 200 && resp.status < 300) {\n          return Promise.resolve(resp);\n        } else {\n          return Promise.reject(resp);\n        }\n      })\n      .then((resp) => resp.json())\n      .catch((e) => {\n        setLoading(true);\n        setData(null);\n        setError(e);\n        return Promise.reject(e);\n      });\n\n  const handleSpotifyError = (error) => {\n    const { status } = error;\n    setLoading(true);\n\n    console.log(error);\n\n    if (status === 401 || status === 403) {\n      console.log(\"Unauthorized\");\n      updateSpotifyLogin(false);\n      logoutSpotify();\n    }\n  };\n\n  useEffect(() => {\n    switch (platform) {\n      case \"spotify\":\n        fetchFromSpotify(url)\n          .then((data) => {\n            setData(data);\n            setError(null);\n            setLoading(false);\n          })\n          .catch((e) => handleSpotifyError(e));\n        break;\n      default:\n    }\n  }, [platform, url]);\n\n  return {\n    loading,\n    data,\n    error,\n  };\n};\n\nexport default useFetchByPlatform;\n","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/SmallAlbum.jsx",["130"],"/Users/zac/Dev/portfolio/spotify-client/src/components/ui/TailSpinLoader.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/ui/MedAlbum.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/ui/ArtistPic.jsx",["131"],"import React from \"react\";\n\nconst ArtistPic = ({ artist }) => {\n  const { src, name } = artist;\n\n  return (\n    <div className=\"recent-card\">\n      <img\n        className=\"recent-image clickable face-pic\"\n        src={src}\n        alt={`Picture of ${name}'s face`}\n      ></img>\n      <h3 className=\"top-artist-name clickable\">{name}</h3>\n    </div>\n  );\n};\n\nexport default ArtistPic;\n","/Users/zac/Dev/portfolio/spotify-client/src/api/AlbumPage.jsx",["132"],"import React, { useContext, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useFetchByPlatform from \"../hooks/useFetchByPlatform\";\nimport StreamingContext from \"../contexts/streamingContext\";\nimport TailSpinLoader from \"../components/ui/TailSpinLoader\";\nimport { FaPlay } from \"react-icons/fa\";\nimport { BiShuffle } from \"react-icons/bi\";\nimport { BsHeart, BsHeartFill } from \"react-icons/bs\";\nimport { AiFillInfoCircle as Info } from \"react-icons/ai\";\nimport Tracklist from \"../components/ui/Tracklist\";\n\nconst endpoints = {\n  spotify: \"https://api.spotify.com/v1/albums\",\n  soundcloud: \"\",\n  youtube: \"\",\n};\n\nconst AlbumPage = () => {\n  const { id } = useParams();\n  const { platform } = useContext(StreamingContext);\n  const { loading, data } = useFetchByPlatform(`${endpoints[platform]}/${id}`);\n  const [saved, setSaved] = useState(false);\n\n  const ToggleSave = () => {\n    console.log(saved);\n    saved ? setSaved(false) : setSaved(true);\n    console.log(saved);\n  };\n\n  if (loading) {\n    return <TailSpinLoader />;\n  }\n\n  console.log(data);\n\n  const { images, name, release_date, artists, tracks } = data;\n\n  return (\n    <React.Fragment>\n      <div className=\"spacer\"></div>\n      <div className=\"spacer\"></div>\n      <div className=\"dashboard-panel\">\n        <div className=\"album-info\">\n          <img className=\"album-cover\" src={images[0][\"url\"]}></img>\n          <div className=\"title-section\">\n            <h1 className=\"album-page-title\">{name}</h1>\n            <h2 className=\"album-page-artist clickable\">\n              {artists[0][\"name\"]}\n            </h2>\n            <h2 className=\"album-page-date\">{release_date.split(\"-\")[0]}</h2>\n          </div>\n        </div>\n        <div className=\"album-nav\">\n          <button className=\"album-nav-btn clickable\">\n            <div className=\"btn-content\">\n              <FaPlay color=\"#111b24\" />\n              <div className=\"ml-10\">Play</div>\n            </div>\n          </button>\n          <button className=\"album-nav-btn clickable\">\n            <div className=\"btn-content\">\n              <BiShuffle size={25} color=\"#111b24\" />{\" \"}\n              <div className=\"ml-10\">Shuffle</div>\n            </div>\n          </button>\n          <button\n            className=\"album-add-btn clickable\"\n            onClick={() => ToggleSave()}\n          >\n            {saved ? (\n              <BsHeartFill size={30} color=\"#00d4ff\" />\n            ) : (\n              <BsHeart size={30} />\n            )}\n          </button>\n          <button className=\"album-credits-btn clickable\">\n            <Info color=\"adbdcc\" size={35} />\n          </button>\n        </div>\n\n        <Tracklist tracks={tracks.items} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AlbumPage;\n","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/Tracklist.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/ui/TracklistItems.jsx",[],{"ruleId":"133","severity":1,"message":"134","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":19},{"ruleId":"133","severity":1,"message":"137","line":3,"column":21,"nodeType":"135","messageId":"136","endLine":3,"endColumn":33},{"ruleId":"133","severity":1,"message":"138","line":3,"column":35,"nodeType":"135","messageId":"136","endLine":3,"endColumn":44},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"139","replacedBy":"145"},{"ruleId":"141","replacedBy":"146"},{"ruleId":"139","replacedBy":"147"},{"ruleId":"141","replacedBy":"148"},{"ruleId":"133","severity":1,"message":"149","line":6,"column":3,"nodeType":"135","messageId":"136","endLine":6,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":19,"column":6,"nodeType":"152","endLine":19,"endColumn":52,"suggestions":"153"},{"ruleId":"139","replacedBy":"154"},{"ruleId":"141","replacedBy":"155"},{"ruleId":"133","severity":1,"message":"156","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":17},{"ruleId":"150","severity":1,"message":"157","line":62,"column":6,"nodeType":"152","endLine":62,"endColumn":21,"suggestions":"158"},{"ruleId":"133","severity":1,"message":"159","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":8,"column":7,"nodeType":"162","endLine":12,"endColumn":8},{"ruleId":"163","severity":1,"message":"164","line":44,"column":11,"nodeType":"162","endLine":44,"endColumn":63},"no-unused-vars","'FaSpotify' is defined but never used.","Identifier","unusedVar","'FaSoundcloud' is defined but never used.","'FaYoutube' is defined but never used.","no-native-reassign",["165"],"no-negated-in-lhs",["166"],["165"],["166"],["165"],["166"],["165"],["166"],"'StreamingConsumer' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'streamingContext'. Either include it or remove the dependency array.","ArrayExpression",["167"],["165"],["166"],"'getCookie' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSpotifyError'. Either include it or remove the dependency array.",["168"],"'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [streamingContext.spotifyLoggedIn, isLoggedIn, streamingContext]",{"range":"173","text":"174"},"Update the dependencies array to be: [handleSpotifyError, platform, url]",{"range":"175","text":"176"},[633,679],"[streamingContext.spotifyLoggedIn, isLoggedIn, streamingContext]",[1550,1565],"[handleSpotifyError, platform, url]"]