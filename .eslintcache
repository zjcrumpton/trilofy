[{"/Users/zac/Dev/portfolio/spotify-client/src/components/Searchbar.jsx":"1","/Users/zac/Dev/portfolio/spotify-client/src/components/StreamingSetter.jsx":"2","/Users/zac/Dev/portfolio/spotify-client/src/App.js":"3","/Users/zac/Dev/portfolio/spotify-client/src/index.js":"4","/Users/zac/Dev/portfolio/spotify-client/src/components/Dashboard.jsx":"5","/Users/zac/Dev/portfolio/spotify-client/src/components/Settings.jsx":"6","/Users/zac/Dev/portfolio/spotify-client/src/contexts/streamingContext.js":"7","/Users/zac/Dev/portfolio/spotify-client/src/components/Authentication.jsx":"8","/Users/zac/Dev/portfolio/spotify-client/src/components/SideNav.jsx":"9","/Users/zac/Dev/portfolio/spotify-client/src/reportWebVitals.js":"10","/Users/zac/Dev/portfolio/spotify-client/src/components/streamingPlatformLogins/spotifyLogin.jsx":"11","/Users/zac/Dev/portfolio/spotify-client/src/utilities/cookies.js":"12","/Users/zac/Dev/portfolio/spotify-client/src/components/Home.jsx":"13","/Users/zac/Dev/portfolio/spotify-client/src/api/NewReleases.jsx":"14","/Users/zac/Dev/portfolio/spotify-client/src/api/RecentlyPlayed.jsx":"15","/Users/zac/Dev/portfolio/spotify-client/src/api/TopArtists.jsx":"16","/Users/zac/Dev/portfolio/spotify-client/src/api/FeaturedPlaylists.jsx":"17","/Users/zac/Dev/portfolio/spotify-client/src/hooks/useFetchByPlatform.js":"18","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/SmallAlbum.jsx":"19","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/TailSpinLoader.jsx":"20","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/MedAlbum.jsx":"21","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/ArtistPic.jsx":"22","/Users/zac/Dev/portfolio/spotify-client/src/api/AlbumPage.jsx":"23","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/Tracklist.jsx":"24","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/TracklistItems.jsx":"25","/Users/zac/Dev/portfolio/spotify-client/src/contexts/playerContext.js":"26","/Users/zac/Dev/portfolio/spotify-client/src/components/Player.jsx":"27","/Users/zac/Dev/portfolio/spotify-client/src/api/SpotifyPlayer.jsx":"28","/Users/zac/Dev/portfolio/spotify-client/src/api/spotifyPlayback.js":"29","/Users/zac/Dev/portfolio/spotify-client/src/components/MusicPlayer.jsx":"30","/Users/zac/Dev/portfolio/spotify-client/src/api/spotifyEvents.js":"31"},{"size":584,"mtime":1610662203693,"results":"32","hashOfConfig":"33"},{"size":1318,"mtime":1611003458710,"results":"34","hashOfConfig":"33"},{"size":1855,"mtime":1611201263031,"results":"35","hashOfConfig":"33"},{"size":500,"mtime":1610578412797,"results":"36","hashOfConfig":"33"},{"size":804,"mtime":1611353032402,"results":"37","hashOfConfig":"33"},{"size":549,"mtime":1610572664270,"results":"38","hashOfConfig":"33"},{"size":266,"mtime":1610422200151,"results":"39","hashOfConfig":"33"},{"size":873,"mtime":1610578598282,"results":"40","hashOfConfig":"33"},{"size":3228,"mtime":1610146841229,"results":"41","hashOfConfig":"33"},{"size":364,"mtime":1610057484804,"results":"42","hashOfConfig":"33"},{"size":2235,"mtime":1611244627048,"results":"43","hashOfConfig":"33"},{"size":322,"mtime":1610473568709,"results":"44","hashOfConfig":"33"},{"size":2012,"mtime":1610662646967,"results":"45","hashOfConfig":"33"},{"size":1215,"mtime":1610666213126,"results":"46","hashOfConfig":"33"},{"size":1416,"mtime":1611183815377,"results":"47","hashOfConfig":"33"},{"size":1075,"mtime":1610662061355,"results":"48","hashOfConfig":"33"},{"size":1323,"mtime":1610661930754,"results":"49","hashOfConfig":"33"},{"size":1658,"mtime":1610667121722,"results":"50","hashOfConfig":"33"},{"size":588,"mtime":1610946274151,"results":"51","hashOfConfig":"33"},{"size":287,"mtime":1610646160128,"results":"52","hashOfConfig":"33"},{"size":510,"mtime":1610653785771,"results":"53","hashOfConfig":"33"},{"size":385,"mtime":1610660913745,"results":"54","hashOfConfig":"33"},{"size":3448,"mtime":1611282715617,"results":"55","hashOfConfig":"33"},{"size":481,"mtime":1611027203467,"results":"56","hashOfConfig":"33"},{"size":2334,"mtime":1611203944900,"results":"57","hashOfConfig":"33"},{"size":242,"mtime":1611286669242,"results":"58","hashOfConfig":"33"},{"size":228,"mtime":1611186155211,"results":"59","hashOfConfig":"33"},{"size":3872,"mtime":1611349842889,"results":"60","hashOfConfig":"33"},{"size":633,"mtime":1611196671927,"results":"61","hashOfConfig":"33"},{"size":4882,"mtime":1611363649099,"results":"62","hashOfConfig":"33"},{"size":1589,"mtime":1611360822110,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"rgqea2",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zac/Dev/portfolio/spotify-client/src/components/Searchbar.jsx",["143","144","145"],"import React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { FaSpotify, FaSoundcloud, FaYoutube } from \"react-icons/fa\";\nimport StreamingSetter from \"./StreamingSetter\";\n\nconst Searchbar = () => {\n  return (\n    <form>\n      <div className=\"search-nav sticky\">\n        <FaSearch size={25} color=\"#adbdcc\" className=\"search-icon\" />\n        <input type=\"text\" placeholder=\"Search\" className=\"search-bar\" />\n        <input type=\"reset\" value=\"X\" className=\"reset-search\"></input>\n        <StreamingSetter />\n      </div>\n    </form>\n  );\n};\n\nexport default Searchbar;\n",["146","147"],"/Users/zac/Dev/portfolio/spotify-client/src/components/StreamingSetter.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/App.js",[],["148","149"],"/Users/zac/Dev/portfolio/spotify-client/src/index.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Dashboard.jsx",["150","151"],"/Users/zac/Dev/portfolio/spotify-client/src/components/Settings.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/contexts/streamingContext.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Authentication.jsx",[],["152","153"],"/Users/zac/Dev/portfolio/spotify-client/src/components/SideNav.jsx",[],["154","155"],"/Users/zac/Dev/portfolio/spotify-client/src/reportWebVitals.js",[],["156","157"],"/Users/zac/Dev/portfolio/spotify-client/src/components/streamingPlatformLogins/spotifyLogin.jsx",["158","159"],"import React from \"react\";\nimport { FaSpotify } from \"react-icons/fa\";\nimport queryString from \"query-string\";\nimport getCookie from \"../../utilities/cookies\";\nimport StreamingContext, {\n  StreamingConsumer,\n} from \"../../contexts/streamingContext\";\n\nconst SpotifyLogin = ({ redirectUri }) => {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(loggedIn());\n  const streamingContext = React.useContext(StreamingContext);\n\n  let params = queryString.parse(window.location.hash);\n\n  React.useEffect(() => {\n    if (streamingContext.spotifyLoggedIn !== isLoggedIn) {\n      streamingContext.updateSpotifyLogin(isLoggedIn);\n    }\n  }, [streamingContext.spotifyLoggedIn, isLoggedIn]);\n\n  if (params[\"access_token\"]) {\n    const { access_token, expires_in } = params;\n    document.cookie = `spotifyAccess=${access_token}; max-age=${expires_in}; path=/; SameSite=Lax;`;\n  }\n\n  return (\n    <div className=\"centered-flex-container platform-settings\">\n      <div className=\"platform-card\">\n        <FaSpotify size={100} color={isLoggedIn ? \"#17d85d\" : \"#adbdcc\"} />\n        <button\n          className=\"connect-button clickable\"\n          onClick={() => {\n            if (streamingContext.spotifyLoggedIn) {\n              logoutOfSpotify();\n              setIsLoggedIn(false);\n            } else {\n              loginToSpotify(redirectUri);\n              setIsLoggedIn(true);\n            }\n          }}\n        >\n          {isLoggedIn ? \"Disconnect Spotify\" : \"Connect Spotify\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst loginToSpotify = (redirectUri) => {\n  const scopes =\n    \"user-read-recently-played user-top-read streaming user-read-email user-read-private user-modify-playback-state user-read-playback-state user-read-currently-playing\";\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=eafc1d75f4cf413e891b0392579ee5da&redirect_uri=${redirectUri}&response_type=token&scope=${encodeURIComponent(\n    scopes\n  )}`;\n};\n\nconst logoutOfSpotify = () => {\n  document.cookie = \"spotifyAccess=expired; max-age=0; path=/; SameSite=Lax\";\n};\n\nconst loggedIn = () => {\n  return getCookie(\"spotifyAccess\") && getCookie(\"spotifyAccess\") !== \"expired\"\n    ? true\n    : false;\n};\n\nexport default SpotifyLogin;\n","/Users/zac/Dev/portfolio/spotify-client/src/utilities/cookies.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Home.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/api/NewReleases.jsx",["160"],"import React, { useContext } from \"react\";\nimport StreamingContext from \"../contexts/streamingContext\";\nimport getCookie from \"../utilities/cookies\";\nimport TailSpinLoader from \"../components/ui/TailSpinLoader\";\nimport MedAlbum from \"../components/ui/MedAlbum\";\nimport useFetchByPlatform from \"../hooks/useFetchByPlatform\";\n\nconst endpoints = {\n  spotify: \"https://api.spotify.com/v1/browse/new-releases\",\n  soundcloud: \"\",\n  youtube: \"\",\n};\n\nconst NewReleases = () => {\n  const { platform } = useContext(StreamingContext);\n  const { loading, data } = useFetchByPlatform(endpoints[`${platform}`]);\n\n  if (loading) {\n    return <TailSpinLoader />;\n  }\n\n  // console.log(data);\n\n  return (\n    <div>\n      <h1 className=\"release-header\">New Releases</h1>\n      <div className=\"featured-list\">\n        {data[\"albums\"][\"items\"].map((item, index) => {\n          const album = formatSpotifyAlbum(item);\n          return <MedAlbum key={index} album={album} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst formatSpotifyAlbum = (album) => {\n  return {\n    name: album[\"name\"],\n    type: album[\"album_type\"],\n    desc: album[\"artists\"][0].name,\n    src: album[\"images\"][0][\"url\"],\n  };\n};\n\nexport default NewReleases;\n",["161","162"],"/Users/zac/Dev/portfolio/spotify-client/src/api/RecentlyPlayed.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/api/TopArtists.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/api/FeaturedPlaylists.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/hooks/useFetchByPlatform.js",["163"],"import { useEffect, useState, useContext } from \"react\";\nimport getCookie from \"../utilities/cookies\";\nimport StreamingContext from \"../contexts/streamingContext\";\n\nconst useFetchByPlatform = (url) => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { platform, updateSpotifyLogin, logoutSpotify } = useContext(\n    StreamingContext\n  );\n\n  const fetchFromSpotify = (url) =>\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${getCookie(\"spotifyAccess\")}`,\n      },\n    })\n      .then((resp) => {\n        if (resp.status >= 200 && resp.status < 300) {\n          return Promise.resolve(resp);\n        } else {\n          return Promise.reject(resp);\n        }\n      })\n      .then((resp) => resp.json())\n      .catch((e) => {\n        setLoading(true);\n        setData(null);\n        setError(e);\n        return Promise.reject(e);\n      });\n\n  const handleSpotifyError = (error) => {\n    const { status } = error;\n    setLoading(true);\n\n    console.log(error);\n\n    if (status === 401 || status === 403) {\n      console.log(\"Unauthorized\");\n      updateSpotifyLogin(false);\n      logoutSpotify();\n    }\n  };\n\n  useEffect(() => {\n    switch (platform) {\n      case \"spotify\":\n        fetchFromSpotify(url)\n          .then((data) => {\n            setData(data);\n            setError(null);\n            setLoading(false);\n          })\n          .catch((e) => handleSpotifyError(e));\n        break;\n      default:\n    }\n  }, [platform, url]);\n\n  return {\n    loading,\n    data,\n    error,\n  };\n};\n\nexport default useFetchByPlatform;\n","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/SmallAlbum.jsx",["164"],"import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SmallAlbum = ({ album }) => {\n  const { id, name, desc, src } = album;\n\n  return (\n    <div className=\"recent-card\">\n      <Link to={`/dashboard/album/${id}`} className=\"clean-link\">\n        <img\n          className=\"recent-image clickable\"\n          src={src}\n          alt={`Cover art for ${name}`}\n        ></img>\n        <h3 className=\"recent-title clickable\">{name}</h3>\n      </Link>\n\n      <h3 className=\"recent-credits clickable\">{desc}</h3>\n    </div>\n  );\n};\n\nexport default SmallAlbum;\n","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/TailSpinLoader.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/ui/MedAlbum.jsx",[],["165","166"],"/Users/zac/Dev/portfolio/spotify-client/src/components/ui/ArtistPic.jsx",["167"],"import React from \"react\";\n\nconst ArtistPic = ({ artist }) => {\n  const { src, name } = artist;\n\n  return (\n    <div className=\"recent-card\">\n      <img\n        className=\"recent-image clickable face-pic\"\n        src={src}\n        alt={`Picture of ${name}'s face`}\n      ></img>\n      <h3 className=\"top-artist-name clickable\">{name}</h3>\n    </div>\n  );\n};\n\nexport default ArtistPic;\n",["168","169"],"/Users/zac/Dev/portfolio/spotify-client/src/api/AlbumPage.jsx",["170","171","172","173"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useFetchByPlatform from \"../hooks/useFetchByPlatform\";\nimport StreamingContext from \"../contexts/streamingContext\";\nimport TailSpinLoader from \"../components/ui/TailSpinLoader\";\nimport { FaPlay } from \"react-icons/fa\";\nimport { BiShuffle } from \"react-icons/bi\";\nimport { BsHeart, BsHeartFill } from \"react-icons/bs\";\nimport { AiFillInfoCircle as Info } from \"react-icons/ai\";\nimport Tracklist from \"../components/ui/Tracklist\";\nimport { startSpotifyPlayback } from \"../api/spotifyPlayback\";\n\nconst endpoints = {\n  spotify: \"https://api.spotify.com/v1/albums\",\n  soundcloud: \"\",\n  youtube: \"\",\n};\n\nconst playlistSpotifyUris = (tracks) => {\n  const result = [];\n  tracks.map((track) => {\n    result.push(track.uri);\n  });\n  return result;\n};\n\nconst AlbumPage = () => {\n  const { id } = useParams();\n  const {\n    platform,\n    setSpUris,\n    spDeviceId,\n    spUris,\n    setCurrentSong,\n  } = useContext(StreamingContext);\n  const { loading, data } = useFetchByPlatform(`${endpoints[platform]}/${id}`);\n  const [saved, setSaved] = useState(false);\n\n  useEffect(() => {\n    if (!loading) {\n      setSpUris(playlistSpotifyUris(data.tracks.items));\n    }\n\n    return () => {\n      setSpUris([]);\n    };\n  }, [loading, data]);\n\n  const ToggleSave = () => {\n    console.log(saved);\n    saved ? setSaved(false) : setSaved(true);\n    console.log(saved);\n  };\n\n  if (loading) {\n    return <TailSpinLoader />;\n  }\n\n  const { images, name, release_date, artists, tracks, uri } = data;\n\n  return (\n    <React.Fragment>\n      <div className=\"spacer\"></div>\n      <div className=\"spacer\"></div>\n      <div className=\"dashboard-panel\">\n        <div className=\"album-info\">\n          <img className=\"album-cover\" src={images[0][\"url\"]}></img>\n          <div className=\"title-section\">\n            <h1 className=\"album-page-title\">{name}</h1>\n            <h2 className=\"album-page-artist clickable\">\n              {artists[0][\"name\"]}\n            </h2>\n            <h2 className=\"album-page-date\">{release_date.split(\"-\")[0]}</h2>\n          </div>\n        </div>\n        <div className=\"album-nav\">\n          <button\n            className=\"album-nav-btn clickable\"\n            onClick={() => {\n              setSpUris(playlistSpotifyUris(tracks.items));\n              startSpotifyPlayback(spDeviceId, 0, spUris);\n              setCurrentSong(tracks.items[0].uri);\n            }}\n          >\n            <div className=\"btn-content\">\n              <FaPlay color=\"#111b24\" />\n              <div className=\"ml-10\">Play</div>\n            </div>\n          </button>\n          <button className=\"album-nav-btn clickable\">\n            <div className=\"btn-content\">\n              <BiShuffle size={25} color=\"#111b24\" />{\" \"}\n              <div className=\"ml-10\">Shuffle</div>\n            </div>\n          </button>\n          <button\n            className=\"album-add-btn clickable\"\n            onClick={() => ToggleSave()}\n          >\n            {saved ? (\n              <BsHeartFill size={30} color=\"#00d4ff\" />\n            ) : (\n              <BsHeart size={30} />\n            )}\n          </button>\n          <button className=\"album-credits-btn clickable\">\n            <Info color=\"adbdcc\" size={35} />\n          </button>\n        </div>\n\n        <Tracklist tracks={tracks.items} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AlbumPage;\n","/Users/zac/Dev/portfolio/spotify-client/src/components/ui/Tracklist.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/ui/TracklistItems.jsx",["174","175"],"import React, { useState, useContext, useEffect } from \"react\";\nimport StreamingContext from \"../../contexts/streamingContext\";\nimport { FaPlay } from \"react-icons/fa\";\nimport { startSpotifyPlayback } from \"../../api/spotifyPlayback\";\nimport { BsSpeaker } from \"react-icons/bs\";\n\nconst TracklistItems = ({ tracks }) => {\n  return tracks.map((track, i) => (\n    <TrackItem track={track} index={i} album={tracks} />\n  ));\n};\n\nconst TrackItem = ({ track, index, album }) => {\n  const [hovering, setHovering] = useState(false);\n  const {\n    spDeviceId,\n    next,\n    setNext,\n    last,\n    setLast,\n    currentSong,\n    setCurrentSong,\n  } = useContext(StreamingContext);\n\n  const toggleHover = () => {\n    hovering ? setHovering(false) : setHovering(true);\n  };\n\n  const playSong = () => {\n    startSpotifyPlayback(spDeviceId, 0, [uri]).then(() => {\n      setCurrentSong(uri);\n    });\n    if (index < album.length - 1) {\n      setNext(album[index + 1].uri);\n    } else {\n      setNext(album[0].uri);\n    }\n    if (index > 0) {\n      setLast(album[index - 1].uri);\n    } else {\n      setLast(album[0].uri);\n    }\n  };\n\n  useEffect(() => {\n    console.log(currentSong);\n  }, [currentSong]);\n\n  const { track_number, name, artists, duration_ms, uri } = track;\n\n  let minutes = Math.floor(duration_ms / 60000);\n  let seconds = ((duration_ms % 60000) / 1000).toFixed(0);\n  let duration = minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n\n  return (\n    <tr\n      className=\"hover-row\"\n      key={`item-${index}`}\n      onMouseEnter={() => toggleHover()}\n      onMouseLeave={() => toggleHover()}\n    >\n      <td className=\"gray-num\">\n        {hovering ? (\n          <FaPlay\n            onClick={() => playSong()}\n            className=\"clickable vert-centered\"\n            color=\"white\"\n            size={13}\n          />\n        ) : uri === currentSong ? (\n          <BsSpeaker size={13} />\n        ) : (\n          track_number\n        )}\n      </td>\n      {uri === currentSong ? (\n        <td className=\"clickable blue\" onClick={() => playSong()}>\n          {name}\n        </td>\n      ) : (\n        <td className=\"clickable\" onClick={() => playSong()}>\n          {name}\n        </td>\n      )}\n      <td className=\"clickable artist-link\">{artists[0].name}</td>\n      <td>{duration}</td>\n    </tr>\n  );\n};\n\nexport default TracklistItems;\n","/Users/zac/Dev/portfolio/spotify-client/src/contexts/playerContext.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Player.jsx",["176","177","178","179"],"/Users/zac/Dev/portfolio/spotify-client/src/api/SpotifyPlayer.jsx",["180","181","182","183","184"],"/Users/zac/Dev/portfolio/spotify-client/src/api/spotifyPlayback.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/MusicPlayer.jsx",["185","186","187","188","189","190","191"],"import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport StreamingContext from \"../contexts/streamingContext\";\nimport getCookie from \"../utilities/cookies\";\nimport TailSpinLoader from \"./ui/TailSpinLoader\";\nimport { addSpotifyEventListeners } from \"../api/spotifyEvents\";\nimport { FaSpotify, FaSoundcloud, FaYoutube } from \"react-icons/fa\";\nimport { FaPlay, FaPause } from \"react-icons/fa\";\nimport { BiShuffle } from \"react-icons/bi\";\nimport { AiFillStepBackward, AiFillStepForward } from \"react-icons/ai\";\nimport { MdRepeat, MdRepeatOne } from \"react-icons/md\";\n\nconst MusicPlayer = () => {\n  const [loading, setLoading] = useState(true);\n  const [platform, setPlatform] = useState(\"spotify\");\n  const [updating, setUpdating] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [trackData, setTrackData] = useState(null);\n  const [update, setUpdate] = useState(0);\n  const [position, setPosition] = useState(0);\n  const [paused, setPaused] = useState(true);\n\n  const spotifyPlayer = useRef(null);\n\n  const { setSpDeviceId, currentSong, setCurrentSong } = useContext(\n    StreamingContext\n  );\n\n  const timeoutId = useRef(null);\n\n  useEffect(() => {\n    console.log(\"using effect\");\n    if (spotifyPlayer.current !== null) {\n      setInterval(() => {\n        spotifyPlayer.current.getCurrentState().then((state) => {\n          if (state && state.position) {\n            if (state.paused) {\n              setPaused(true);\n            } else {\n              setPaused(false);\n              setPosition(state.position);\n            }\n          }\n        });\n      }, 1000);\n    }\n\n    if (platform === \"spotify\" && spotifyPlayer.current === null) {\n      window.onSpotifyWebPlaybackSDKReady = () => {\n        handleLoadSuccess(window.Spotify);\n      };\n    }\n\n    return () => {\n      if (timeoutId.current) {\n        if (timeoutId.current) {\n          clearTimeout(timeoutId);\n        }\n      }\n    };\n  }, [platform, update, spotifyPlayer.current]);\n\n  const handleLoadSuccess = (spotify) => {\n    window.Spotify = spotify;\n    spotifyPlayer.current = new window.Spotify.Player({\n      name: \"Trilofy\",\n      getOAuthToken: (cb) => {\n        cb(getCookie(\"spotifyAccess\"));\n      },\n    });\n    addSpotifyEventListeners(spotifyPlayer.current, {\n      setSpDeviceId,\n      currentSong,\n      setCurrentSong,\n      updating,\n      setUpdating,\n      duration,\n      setDuration,\n      timeoutId,\n      setTrackData,\n      setLoading,\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"music-player\">\n        <TailSpinLoader />\n      </div>\n    );\n  }\n\n  if (platform === \"spotify\" && trackData) {\n    const { track_window } = trackData;\n    const { current_track } = track_window;\n\n    return (\n      <div className=\"music-player\">\n        <img\n          className=\"playing-art\"\n          src={current_track.album.images[0].url}\n          alt={`Cover art for ${current_track.name}`}\n        ></img>\n        <div className=\"playing-info\">\n          <h1>{current_track.name}</h1>\n          <h3>{current_track.artists[0].name}</h3>\n        </div>\n\n        <div className=\"controls-container\">\n          <div className=\"centered-flex-container main-controls space-around\">\n            <BiShuffle className=\"clickable gray blue-on-hover\" size={20} />\n            <AiFillStepBackward\n              className=\"clickable gray blue-on-hover\"\n              size={20}\n            />\n            {paused ? (\n              <FaPlay\n                onClick={() => {\n                  spotifyPlayer.current.togglePlay().then(() => {\n                    setPaused(paused ? false : true);\n                  });\n                }}\n                className=\"clickable white blue-on-hover\"\n                size={22}\n              />\n            ) : (\n              <FaPause\n                onClick={() => {\n                  spotifyPlayer.current.togglePlay().then(() => {\n                    setPaused(paused ? false : true);\n                  });\n                }}\n                className=\"clickable white blue-on-hover\"\n                size={22}\n              />\n            )}\n\n            <AiFillStepForward\n              className=\"clickable gray blue-on-hover\"\n              size={20}\n            />\n            <MdRepeat className=\"clickable gray blue-on-hover\" size={20} />\n          </div>\n          <div className=\"progress-wrapper\">\n            <div\n              className=\"progress-bar\"\n              style={{\n                width: `${(position / current_track.duration_ms) * 100}%`,\n                borderRadius: \"100px\",\n                height: \"5px\",\n              }}\n            ></div>\n          </div>\n        </div>\n\n        <FaSpotify color=\"#17d85d\" size={40} style={{ marginRight: \"20px\" }} />\n      </div>\n    );\n  }\n\n  return <div className=\"music-player\">No Platform selected</div>;\n};\n\nexport default MusicPlayer;\n","/Users/zac/Dev/portfolio/spotify-client/src/api/spotifyEvents.js",["192","193","194","195"],{"ruleId":"196","severity":1,"message":"197","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":19},{"ruleId":"196","severity":1,"message":"200","line":3,"column":21,"nodeType":"198","messageId":"199","endLine":3,"endColumn":33},{"ruleId":"196","severity":1,"message":"201","line":3,"column":35,"nodeType":"198","messageId":"199","endLine":3,"endColumn":44},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"202","replacedBy":"206"},{"ruleId":"204","replacedBy":"207"},{"ruleId":"196","severity":1,"message":"208","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"209","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"202","replacedBy":"210"},{"ruleId":"204","replacedBy":"211"},{"ruleId":"202","replacedBy":"212"},{"ruleId":"204","replacedBy":"213"},{"ruleId":"202","replacedBy":"214"},{"ruleId":"204","replacedBy":"215"},{"ruleId":"196","severity":1,"message":"216","line":6,"column":3,"nodeType":"198","messageId":"199","endLine":6,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":19,"column":6,"nodeType":"219","endLine":19,"endColumn":52,"suggestions":"220"},{"ruleId":"196","severity":1,"message":"221","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":17},{"ruleId":"202","replacedBy":"222"},{"ruleId":"204","replacedBy":"223"},{"ruleId":"217","severity":1,"message":"224","line":62,"column":6,"nodeType":"219","endLine":62,"endColumn":21,"suggestions":"225"},{"ruleId":"196","severity":1,"message":"226","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"202","replacedBy":"227"},{"ruleId":"204","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":8,"column":7,"nodeType":"231","endLine":12,"endColumn":8},{"ruleId":"202","replacedBy":"232"},{"ruleId":"204","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":21,"column":22,"nodeType":"236","messageId":"237","endLine":21,"endColumn":24},{"ruleId":"217","severity":1,"message":"238","line":47,"column":6,"nodeType":"219","endLine":47,"endColumn":21,"suggestions":"239"},{"ruleId":"196","severity":1,"message":"240","line":59,"column":56,"nodeType":"198","messageId":"199","endLine":59,"endColumn":59},{"ruleId":"241","severity":1,"message":"242","line":67,"column":11,"nodeType":"231","endLine":67,"endColumn":63},{"ruleId":"196","severity":1,"message":"243","line":17,"column":5,"nodeType":"198","messageId":"199","endLine":17,"endColumn":9},{"ruleId":"196","severity":1,"message":"244","line":19,"column":5,"nodeType":"198","messageId":"199","endLine":19,"endColumn":9},{"ruleId":"196","severity":1,"message":"226","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"196","severity":1,"message":"208","line":1,"column":29,"nodeType":"198","messageId":"199","endLine":1,"endColumn":37},{"ruleId":"196","severity":1,"message":"245","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":21},{"ruleId":"196","severity":1,"message":"221","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":17},{"ruleId":"196","severity":1,"message":"246","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":21},{"ruleId":"196","severity":1,"message":"247","line":9,"column":10,"nodeType":"198","messageId":"199","endLine":9,"endColumn":15},{"ruleId":"196","severity":1,"message":"248","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":18},{"ruleId":"196","severity":1,"message":"249","line":11,"column":20,"nodeType":"198","messageId":"199","endLine":11,"endColumn":31},{"ruleId":"196","severity":1,"message":"250","line":141,"column":7,"nodeType":"198","messageId":"199","endLine":141,"endColumn":26},{"ruleId":"196","severity":1,"message":"200","line":6,"column":21,"nodeType":"198","messageId":"199","endLine":6,"endColumn":33},{"ruleId":"196","severity":1,"message":"201","line":6,"column":35,"nodeType":"198","messageId":"199","endLine":6,"endColumn":44},{"ruleId":"196","severity":1,"message":"251","line":10,"column":20,"nodeType":"198","messageId":"199","endLine":10,"endColumn":31},{"ruleId":"196","severity":1,"message":"252","line":14,"column":20,"nodeType":"198","messageId":"199","endLine":14,"endColumn":31},{"ruleId":"196","severity":1,"message":"253","line":18,"column":18,"nodeType":"198","messageId":"199","endLine":18,"endColumn":27},{"ruleId":"217","severity":1,"message":"254","line":55,"column":23,"nodeType":"198","endLine":55,"endColumn":30},{"ruleId":"217","severity":1,"message":"255","line":60,"column":6,"nodeType":"219","endLine":60,"endColumn":47,"suggestions":"256"},{"ruleId":"196","severity":1,"message":"257","line":8,"column":5,"nodeType":"198","messageId":"199","endLine":8,"endColumn":13},{"ruleId":"196","severity":1,"message":"258","line":9,"column":5,"nodeType":"198","messageId":"199","endLine":9,"endColumn":16},{"ruleId":"196","severity":1,"message":"259","line":10,"column":5,"nodeType":"198","messageId":"199","endLine":10,"endColumn":13},{"ruleId":"196","severity":1,"message":"260","line":11,"column":5,"nodeType":"198","messageId":"199","endLine":11,"endColumn":16},"no-unused-vars","'FaSpotify' is defined but never used.","Identifier","unusedVar","'FaSoundcloud' is defined but never used.","'FaYoutube' is defined but never used.","no-native-reassign",["261"],"no-negated-in-lhs",["262"],["261"],["262"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["261"],["262"],["261"],["262"],["261"],["262"],"'StreamingConsumer' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'streamingContext'. Either include it or remove the dependency array.","ArrayExpression",["263"],"'getCookie' is defined but never used.",["261"],["262"],"React Hook useEffect has a missing dependency: 'handleSpotifyError'. Either include it or remove the dependency array.",["264"],"'useContext' is defined but never used.",["261"],["262"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["261"],["262"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'setSpUris'. Either include it or remove the dependency array.",["265"],"'uri' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'next' is assigned a value but never used.","'last' is assigned a value but never used.","'SpotifyPlayer' is defined but never used.","'PlayerContext' is defined but never used.","'token' is assigned a value but never used.","'playerId' is assigned a value but never used.","'setPlayerId' is assigned a value but never used.","'getCurrentlyPlaying' is assigned a value but never used.","'MdRepeatOne' is defined but never used.","'setPlatform' is assigned a value but never used.","'setUpdate' is assigned a value but never used.","The ref value 'timeoutId.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'timeoutId.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'handleLoadSuccess'. Either include it or remove the dependency array. Mutable values like 'spotifyPlayer.current' aren't valid dependencies because mutating them doesn't re-render the component.",["266"],"'duration' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [streamingContext.spotifyLoggedIn, isLoggedIn, streamingContext]",{"range":"275","text":"276"},"Update the dependencies array to be: [handleSpotifyError, platform, url]",{"range":"277","text":"278"},"Update the dependencies array to be: [loading, data, setSpUris]",{"range":"279","text":"280"},"Update the dependencies array to be: [platform, update, handleLoadSuccess]",{"range":"281","text":"282"},[633,679],"[streamingContext.spotifyLoggedIn, isLoggedIn, streamingContext]",[1550,1565],"[handleSpotifyError, platform, url]",[1320,1335],"[loading, data, setSpUris]",[1949,1990],"[platform, update, handleLoadSuccess]"]