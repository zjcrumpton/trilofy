[{"/Users/zac/Dev/portfolio/spotify-client/src/components/Searchbar.jsx":"1","/Users/zac/Dev/portfolio/spotify-client/src/components/StreamingSetter.jsx":"2","/Users/zac/Dev/portfolio/spotify-client/src/App.js":"3","/Users/zac/Dev/portfolio/spotify-client/src/index.js":"4","/Users/zac/Dev/portfolio/spotify-client/src/components/Dashboard.jsx":"5","/Users/zac/Dev/portfolio/spotify-client/src/components/Settings.jsx":"6","/Users/zac/Dev/portfolio/spotify-client/src/contexts/streamingContext.js":"7","/Users/zac/Dev/portfolio/spotify-client/src/components/Authentication.jsx":"8","/Users/zac/Dev/portfolio/spotify-client/src/components/SideNav.jsx":"9","/Users/zac/Dev/portfolio/spotify-client/src/reportWebVitals.js":"10","/Users/zac/Dev/portfolio/spotify-client/src/components/streamingPlatformLogins/spotifyLogin.jsx":"11","/Users/zac/Dev/portfolio/spotify-client/src/utilities/cookies.js":"12","/Users/zac/Dev/portfolio/spotify-client/src/components/Home.jsx":"13","/Users/zac/Dev/portfolio/spotify-client/src/api/NewReleases.jsx":"14","/Users/zac/Dev/portfolio/spotify-client/src/api/RecentlyPlayed.jsx":"15","/Users/zac/Dev/portfolio/spotify-client/src/api/TopArtists.jsx":"16","/Users/zac/Dev/portfolio/spotify-client/src/api/FeaturedPlaylists.jsx":"17"},{"size":577,"mtime":1610422683579,"results":"18","hashOfConfig":"19"},{"size":1352,"mtime":1610423795577,"results":"20","hashOfConfig":"19"},{"size":1282,"mtime":1610480659122,"results":"21","hashOfConfig":"19"},{"size":500,"mtime":1610578412797,"results":"22","hashOfConfig":"19"},{"size":715,"mtime":1610477746356,"results":"23","hashOfConfig":"19"},{"size":549,"mtime":1610572664270,"results":"24","hashOfConfig":"19"},{"size":266,"mtime":1610422200151,"results":"25","hashOfConfig":"19"},{"size":873,"mtime":1610578598282,"results":"26","hashOfConfig":"19"},{"size":3228,"mtime":1610146841229,"results":"27","hashOfConfig":"19"},{"size":364,"mtime":1610057484804,"results":"28","hashOfConfig":"19"},{"size":2107,"mtime":1610580662028,"results":"29","hashOfConfig":"19"},{"size":322,"mtime":1610473568709,"results":"30","hashOfConfig":"19"},{"size":1939,"mtime":1610582354968,"results":"31","hashOfConfig":"19"},{"size":2202,"mtime":1610574851619,"results":"32","hashOfConfig":"19"},{"size":2371,"mtime":1610574838012,"results":"33","hashOfConfig":"19"},{"size":1414,"mtime":1610581171336,"results":"34","hashOfConfig":"19"},{"size":1729,"mtime":1610583999198,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"rgqea2",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zac/Dev/portfolio/spotify-client/src/components/Searchbar.jsx",["79","80","81"],"import React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { FaSpotify, FaSoundcloud, FaYoutube } from \"react-icons/fa\";\nimport StreamingSetter from \"./StreamingSetter\";\n\nconst Searchbar = () => {\n  return (\n    <form>\n      <div className=\"search-nav\">\n        <FaSearch size={25} color=\"#adbdcc\" className=\"search-icon\" />\n        <input type=\"text\" placeholder=\"Search\" className=\"search-bar\" />\n        <input type=\"reset\" value=\"X\" className=\"reset-search\"></input>\n        <StreamingSetter />\n      </div>\n    </form>\n  );\n};\n\nexport default Searchbar;\n",["82","83"],"/Users/zac/Dev/portfolio/spotify-client/src/components/StreamingSetter.jsx",["84"],"import React from \"react\";\nimport { FaSpotify, FaSoundcloud, FaYoutube } from \"react-icons/fa\";\nimport { StreamingConsumer } from \"../contexts/streamingContext\";\n\nexport default class StreamingSetter extends React.Component {\n  render() {\n    return (\n      <StreamingConsumer>\n        {({ currentStreamingPlatform, setStreamingPlatform }) => (\n          <div className=\"centered-flex-container\">\n            <FaSpotify\n              color={setStreamingColor(currentStreamingPlatform, \"spotify\")}\n              onClick={() => setStreamingPlatform(\"spotify\")}\n              size={30}\n              className=\"search-provider-logos\"\n            />\n            <FaSoundcloud\n              color={setStreamingColor(currentStreamingPlatform, \"soundcloud\")}\n              onClick={() => setStreamingPlatform(\"soundcloud\")}\n              size={40}\n              className=\"search-provider-logos\"\n            />\n            <FaYoutube\n              color={setStreamingColor(currentStreamingPlatform, \"youtube\")}\n              onClick={() => setStreamingPlatform(\"youtube\")}\n              size={35}\n              className=\"search-provider-logos\"\n            />\n          </div>\n        )}\n      </StreamingConsumer>\n    );\n  }\n}\n\nconst setStreamingColor = (currentPlatform, platform) => {\n  return currentPlatform === `${platform}` ? \"#00d4ff\" : \"#adbdcc\";\n};\n",["85","86"],"/Users/zac/Dev/portfolio/spotify-client/src/App.js",["87","88"],"import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Authentication from \"./components/Authentication\";\nimport Dashboard from \"./components/Dashboard\";\nimport { StreamingProvider } from \"./contexts/streamingContext\";\nimport getCookie from \"./utilities/cookies\";\n\nclass App extends React.Component {\n  state = {\n    currentStreamingPlatform: \"spotify\",\n    setStreamingPlatform: (streamingPlatform) => {\n      this.setState({ currentStreamingPlatform: streamingPlatform });\n    },\n    spotifyLoggedIn: spotifyLoggedIn(),\n    updateSpotifyLogin: (value) => {\n      this.setState({ spotifyLoggedIn: value });\n    },\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <StreamingProvider value={this.state}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Authentication} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route render={() => <h1>404</h1>} />\n            </Switch>\n          </Router>\n        </StreamingProvider>\n      </div>\n    );\n  }\n}\n\nconst spotifyLoggedIn = () => {\n  return getCookie(\"spotifyAccess\") && getCookie(\"spotifyAccess\") !== \"expired\"\n    ? true\n    : false;\n};\n\nexport default App;\n","/Users/zac/Dev/portfolio/spotify-client/src/index.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Dashboard.jsx",["89","90","91"],"import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport SideNav from \"./SideNav\";\nimport { Route } from \"react-router-dom\";\nimport Authentication from \"./Authentication\";\nimport Settings from \"./Settings\";\nimport Searchbar from \"./Searchbar\";\nimport Home from \"./Home\";\n\nconst Dashboard = () => {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n\n  return (\n    <div className=\"dashboard-offset\">\n      <SideNav />\n      <Searchbar />\n      <Route exact path=\"/dashboard\" component={Authentication} />\n      <Route exact path=\"/dashboard/settings\" component={Settings} />\n      <Route exact path=\"/dashboard/home\" component={Home} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/zac/Dev/portfolio/spotify-client/src/components/Settings.jsx",[],["92","93"],"/Users/zac/Dev/portfolio/spotify-client/src/contexts/streamingContext.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Authentication.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/SideNav.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/reportWebVitals.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/streamingPlatformLogins/spotifyLogin.jsx",["94","95"],"import React from \"react\";\nimport { FaSpotify } from \"react-icons/fa\";\nimport queryString from \"query-string\";\nimport getCookie from \"../../utilities/cookies\";\nimport StreamingContext, {\n  StreamingConsumer,\n} from \"../../contexts/streamingContext\";\n\nconst SpotifyLogin = ({ redirectUri }) => {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(loggedIn());\n  const streamingContext = React.useContext(StreamingContext);\n\n  let params = queryString.parse(window.location.hash);\n\n  React.useEffect(() => {\n    if (streamingContext.spotifyLoggedIn !== isLoggedIn) {\n      streamingContext.updateSpotifyLogin(isLoggedIn);\n    }\n  }, [streamingContext.spotifyLoggedIn, isLoggedIn]);\n\n  if (params[\"access_token\"]) {\n    const { access_token, expires_in } = params;\n    document.cookie = `spotifyAccess=${access_token}; max-age=${expires_in}; path=/; SameSite=Lax;`;\n  }\n\n  return (\n    <div className=\"centered-flex-container platform-settings\">\n      <div className=\"platform-card\">\n        <FaSpotify size={100} color={isLoggedIn ? \"#17d85d\" : \"#adbdcc\"} />\n        <button\n          className=\"connect-button clickable\"\n          onClick={() => {\n            if (streamingContext.spotifyLoggedIn) {\n              logoutOfSpotify();\n              setIsLoggedIn(false);\n            } else {\n              loginToSpotify(redirectUri);\n              setIsLoggedIn(true);\n            }\n          }}\n        >\n          {isLoggedIn ? \"Disconnect Spotify\" : \"Connect Spotify\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst loginToSpotify = (redirectUri) => {\n  const scopes = \"user-read-recently-played user-top-read\";\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=eafc1d75f4cf413e891b0392579ee5da&redirect_uri=${redirectUri}&response_type=token&scope=${encodeURIComponent(\n    scopes\n  )}`;\n};\n\nconst logoutOfSpotify = () => {\n  document.cookie = \"spotifyAccess=expired; max-age=0; path=/; SameSite=Lax\";\n};\n\nconst loggedIn = () => {\n  return getCookie(\"spotifyAccess\") && getCookie(\"spotifyAccess\") !== \"expired\"\n    ? true\n    : false;\n};\n\nexport default SpotifyLogin;\n","/Users/zac/Dev/portfolio/spotify-client/src/utilities/cookies.js",[],"/Users/zac/Dev/portfolio/spotify-client/src/components/Home.jsx",[],"/Users/zac/Dev/portfolio/spotify-client/src/api/NewReleases.jsx",["96","97"],"/Users/zac/Dev/portfolio/spotify-client/src/api/RecentlyPlayed.jsx",["98","99"],"import React from \"react\";\nimport StreamingContext, {\n  StreamingConsumer,\n} from \"../contexts/streamingContext\";\nimport getCookie from \"../utilities/cookies\";\nimport Loader from \"react-loader-spinner\";\n\nconst RecentlyPlayed = () => {\n  const streamingContext = React.useContext(StreamingContext);\n\n  const [recentArray, setRecentArray] = React.useState(null);\n\n  const spotifyExpirationHandler = (json) => {\n    if (json.hasOwnProperty(\"error\")) {\n      if (json[\"error\"][\"status\"] === 401) {\n        streamingContext.updateSpotifyLogin(false);\n        return null;\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    fetchRecentlyPlayed().then((json) => {\n      spotifyExpirationHandler(json);\n      const items = json[\"items\"];\n      setRecentArray(items);\n    });\n    return () => {\n      setRecentArray(null);\n    };\n  }, []);\n\n  if (recentArray === null) {\n    return (\n      <Loader\n        type=\"TailSpin\"\n        color=\"#adbdcc\"\n        height={100}\n        width={100}\n        className=\"centered-loader\"\n      />\n    );\n  }\n\n  const renderedAlbums = [];\n\n  return (\n    <div>\n      <h1 className=\"release-header\">Recently Played</h1>\n      <div className=\"featured-list\" style={{ color: \"red\" }}>\n        {recentArray.map((item, index) => {\n          if (renderedAlbums.includes(item[\"track\"][\"album\"][\"name\"])) {\n            return null;\n          } else {\n            renderedAlbums.push(item[\"track\"][\"album\"][\"name\"]);\n            return (\n              <div key={index} className=\"recent-card\">\n                <img\n                  className=\"recent-image clickable\"\n                  src={item[\"track\"][\"album\"][\"images\"][1][\"url\"]}\n                  alt={`Cover art for ${item[\"track\"][\"album\"][\"name\"]}`}\n                ></img>\n                <h3 className=\"recent-title clickable\">\n                  {item[\"track\"][\"album\"][\"name\"]}\n                </h3>\n                <h3 className=\"recent-credits clickable\">\n                  {item[\"track\"][\"artists\"][0].name}\n                </h3>\n              </div>\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst fetchRecentlyPlayed = () =>\n  fetch(\"https://api.spotify.com/v1/me/player/recently-played\", {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${getCookie(\"spotifyAccess\")}`,\n    },\n  }).then((resp) => resp.json());\n\nexport default RecentlyPlayed;\n","/Users/zac/Dev/portfolio/spotify-client/src/api/TopArtists.jsx",["100"],"/Users/zac/Dev/portfolio/spotify-client/src/api/FeaturedPlaylists.jsx",[],{"ruleId":"101","severity":1,"message":"102","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"105","line":3,"column":21,"nodeType":"103","messageId":"104","endLine":3,"endColumn":33},{"ruleId":"101","severity":1,"message":"106","line":3,"column":35,"nodeType":"103","messageId":"104","endLine":3,"endColumn":44},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":13,"column":15,"nodeType":"113","endLine":15,"endColumn":16},{"ruleId":"107","replacedBy":"114"},{"ruleId":"109","replacedBy":"115"},{"ruleId":"101","severity":1,"message":"116","line":3,"column":50,"nodeType":"103","messageId":"104","endLine":3,"endColumn":54},{"ruleId":"117","severity":1,"message":"118","line":15,"column":22,"nodeType":"103","messageId":"119","endLine":15,"endColumn":37},{"ruleId":"101","severity":1,"message":"120","line":11,"column":11,"nodeType":"103","messageId":"104","endLine":11,"endColumn":15},{"ruleId":"101","severity":1,"message":"121","line":11,"column":17,"nodeType":"103","messageId":"104","endLine":11,"endColumn":32},{"ruleId":"101","severity":1,"message":"122","line":11,"column":34,"nodeType":"103","messageId":"104","endLine":11,"endColumn":43},{"ruleId":"107","replacedBy":"123"},{"ruleId":"109","replacedBy":"124"},{"ruleId":"101","severity":1,"message":"125","line":6,"column":3,"nodeType":"103","messageId":"104","endLine":6,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":19,"column":6,"nodeType":"128","endLine":19,"endColumn":52,"suggestions":"129"},{"ruleId":"101","severity":1,"message":"125","line":3,"column":3,"nodeType":"103","messageId":"104","endLine":3,"endColumn":20},{"ruleId":"126","severity":1,"message":"130","line":31,"column":6,"nodeType":"128","endLine":31,"endColumn":8,"suggestions":"131"},{"ruleId":"101","severity":1,"message":"125","line":3,"column":3,"nodeType":"103","messageId":"104","endLine":3,"endColumn":20},{"ruleId":"126","severity":1,"message":"130","line":31,"column":6,"nodeType":"128","endLine":31,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":35,"column":15,"nodeType":"135","endLine":39,"endColumn":16},"no-unused-vars","'FaSpotify' is defined but never used.","Identifier","unusedVar","'FaSoundcloud' is defined but never used.","'FaYoutube' is defined but never used.","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["136"],["137"],"'Link' is defined but never used.","no-use-before-define","'spotifyLoggedIn' was used before it was defined.","usedBeforeDefined","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'isLoading' is assigned a value but never used.",["136"],["137"],"'StreamingConsumer' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'streamingContext'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook React.useEffect has a missing dependency: 'spotifyExpirationHandler'. Either include it or remove the dependency array.",["139"],["140"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},"Update the dependencies array to be: [streamingContext.spotifyLoggedIn, isLoggedIn, streamingContext]",{"range":"146","text":"147"},"Update the dependencies array to be: [spotifyExpirationHandler]",{"range":"148","text":"149"},{"range":"150","text":"149"},[633,679],"[streamingContext.spotifyLoggedIn, isLoggedIn, streamingContext]",[890,892],"[spotifyExpirationHandler]",[825,827]]